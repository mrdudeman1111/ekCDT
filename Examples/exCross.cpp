#include <iostream>
#include <fstream>

#define CDT_IMPL
#include "Export.hpp"

static std::vector<ekCdt::vec2> CrossPoints = {
    {-1.f, 0.384247f},
    {1.f, 0.384247f},
    {-1.f, 1.f},
    {1.f, 1.f},
    {-0.3333333f, 0.384247f},
    {0.3333333f, 0.384247f},
    {0.3333333f, 1.f},
    {-0.3333333f, 1.f},
    {0.3333333f, 1.616065f},
    {-0.3333333f, 1.616065f},
    {-0.3333333f, -1.062426f},
    {0.3333333f, -1.062426f},
    {-0.8944869f, 0.4875378f},
    {0.8944869f, 0.4875378f},
    {-0.8944869f, 0.9021357f},
    {0.8944869f, 0.9021357f},
    {-0.2488628f, 0.4875378f},
    {0.2488628f, 0.4875378f},
    {0.2488628f, 0.9021357f},
    {-0.2488628f, 0.9021357f},
    {0.2436092f, 1.556586f},
    {-0.2436092f, 1.556586f},
    {-0.2436092f, -0.9676696f},
    {0.2436092f, -0.9676696f},
};

std::vector<std::pair<uint32_t, uint32_t>> CrossPolygon = {
    {9, 8},
    {8, 6},
    {6, 3},
    {3, 1},
    {1, 5},
    {5, 11},
    {11, 10},
    {10, 4},
    {4, 0},
    {0, 2},
    {2, 7},
    {7, 9},
    {21, 19},
    {19, 14},
    {14, 12},
    {12, 16},
    {16, 22},
    {22, 23},
    {23, 17},
    {17, 13},
    {13, 15},
    {15, 18},
    {18, 20},
    {20, 21}
};

int main(int argc, char* argv[])
{
    std::vector<uint32_t> MeshIndices = ekCdt::Triangulate(24, CrossPoints.data(), CrossPolygon);

    Export(CrossPoints, MeshIndices, "output.obj");
}